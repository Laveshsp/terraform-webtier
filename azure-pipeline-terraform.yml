## This is a Azure DevOps Pipeline.
## Pre-requisite
  # Terraform Code is pushed on Azure Repos
  # This pipeline considers the Terraform Code to be present on same git repo as this pipeline yaml file
  # Create a Service Connection to Azure Account with name Azure-Account-Service-Connection
  # Update the terraform init tasks with the Storage Account details where .tfstate file will be managed

trigger:
  - main
  - master

variables:
  - name: vm_uname
    value: $(vm_uname_sensitive)

jobs:

- job: TerraformPlan
  displayName: 'Terraform Plan'
  pool:
    vmImage: ubuntu-latest
  steps:
  - task: TerraformInstaller@1
    displayName: 'Install Terraform'
    inputs:
      terraformVersion: 'latest'

  - task: TerraformTaskV4@4
    displayName: 'Terraform Init'
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra-env/poc/webtier/'
      backendServiceArm: 'Azure-Account-Service-Connection'
      backendAzureRmResourceGroupName: 'RGName'
      backendAzureRmStorageAccountName: 'AzStorageAccountName'
      backendAzureRmContainerName: 'AzStorageContainerName'
      backendAzureRmKey: 'terraform.tfstate'

  - task: TerraformTaskV4@4
    displayName: 'Terraform Plan'
    inputs:
      provider: 'azurerm'
      command: 'plan'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra-env/poc/webtier/'
      commandOptions: '-out=tfplan -var "vm_uname=$(vm_uname)"'
      environmentServiceNameAzureRM: 'Azure-Account-Service-Connection'
      

- job: ManualReview
  displayName: 'Manual Review (Recepients Notified via Email)'
  dependsOn: TerraformPlan
  pool: server
  steps:
  - task: ManualValidation@0
    inputs:
      notifyUsers: |
        laveshsp@gmail.com
      instructions: 'Please validate the Terraform Plan task and review the infra changes'
      onTimeout: 'resume'


- job: TerraformApply
  displayName: 'Terraform Apply'
  pool:
    vmImage: ubuntu-latest
  dependsOn: ManualReview
  steps:
   
  - task: TerraformInstaller@1
    displayName: 'Install Terraform'
    inputs:
      terraformVersion: 'latest'

  - task: TerraformTaskV4@4
    displayName: 'Terraform Init'
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra-env/poc/webtier/'
      backendServiceArm: 'Azure-Account-Service-Connection'
      backendAzureRmResourceGroupName: 'RGName'
      backendAzureRmStorageAccountName: 'AzStorageAccountName'
      backendAzureRmContainerName: 'AzStorageContainerName'
      backendAzureRmKey: 'terraform.tfstate'

  - task: TerraformTaskV4@4
    displayName: 'Terraform Apply'
    inputs:
      provider: 'azurerm'
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/infra-env/poc/webtier/'
      commandOptions: '-auto-approve -var "vm_uname=$(vm_uname)"'
      environmentServiceNameAzureRM: 'Azure-Account-Service-Connection'
